<template>
  <div class="card">
    <div class="card-header border-0 pt-6">
      <!--begin::Card title-->
      <div class="card-title">
        <!--begin::Search-->
        <div class="d-flex align-items-center position-relative my-1">
          <span class="svg-icon svg-icon-1 position-absolute ms-6">
            <inline-svg src="/media/icons/duotune/general/gen021.svg"/>
          </span>
          <input
              v-model="search"
              class="form-control form-control-solid w-250px ps-15"
              placeholder="Search Customers"
              type="text"
              @input="searchItems()"
          />
        </div>
        <!--end::Search-->
      </div>
      <!--begin::Card title-->
      <!--begin::Card toolbar-->

      <div class="card-toolbar">
        <!--begin::Toolbar-->
        <div
            v-if="checkedCustomers.length === 0"
            class="d-flex justify-content-end"
            data-kt-customer-table-toolbar="base"
        >
          <!--begin::Export-->
          <button
              class="btn btn-light-primary me-3"
              data-bs-target="#kt_customers_export_modal"
              data-bs-toggle="modal"
              type="button"
          >
            <span class="svg-icon svg-icon-2">
              <inline-svg src="/media/icons/duotune/arrows/arr078.svg"/>
            </span>
            Export
          </button>
          <!--end::Export-->
          <!--begin::Add customer-->
          <button
              class="btn btn-primary"
              data-bs-target="#kt_modal_add_customer"
              data-bs-toggle="modal"
              type="button"
          >
            <span class="svg-icon svg-icon-2">
              <inline-svg src="/media/icons/duotone/Navigation/Plus.svg"/>
            </span>
            Add Customer
          </button>
          <!--end::Add customer-->
        </div>
        <!--end::Toolbar-->
        <!--begin::Group actions-->
        <div
            v-else
            class="d-flex justify-content-end align-items-center"
            data-kt-customer-table-toolbar="selected"
        >
          <div class="fw-bolder me-5">
            <span class="me-2">{{ checkedCustomers.length }}</span
            >Selected
          </div>
          <button
              class="btn btn-danger"
              type="button"
              @click="deleteFewCustomers()"
          >
            Delete Selected
          </button>
        </div>
        <!--end::Group actions-->
        <!--begin::Group actions-->
        <div
            class="d-flex justify-content-end align-items-center d-none"
            data-kt-customer-table-toolbar="selected"
        >
          <div class="fw-bolder me-5">
            <span
                class="me-2"
                data-kt-customer-table-select="selected_count"
            ></span
            >Selected
          </div>
          <button
              class="btn btn-danger"
              data-kt-customer-table-select="delete_selected"
              type="button"
          >
            Delete Selected
          </button>
        </div>
        <!--end::Group actions-->
      </div>
      <!--end::Card toolbar-->
    </div>
    {{ tableData }}
    <div class="card-body pt-0">
      <Datatable
          :enable-items-per-page-dropdown="true"
          :table-data="tableData"
          :table-header="tableHeader"
      >
        <template v-slot:cell-checkbox="{ row: customer }">
          <div
              class="form-check form-check-sm form-check-custom form-check-solid"
          >
            <input
                v-model="checkedCustomers"
                :value="customer.id"
                class="form-check-input"
                type="checkbox"
            />
          </div>
        </template>
        <template v-slot:cell-name="{ row: customer }">
          {{ customer.code }}
        </template>
        <template v-slot:cell-email="{ row: customer }">
          <a class="text-gray-600 text-hover-primary mb-1" href="#">
            {{ customer.code }}
          </a>
        </template>
        <template v-slot:cell-company="{ row: customer }">
          {{ customer.code }}
        </template>
        <template v-slot:cell-paymentMethod="{ row: customer }">
          <img :src="customer.code" alt="" class="w-35px me-3"/>{{
          customer.code
          }}
        </template>
        <template v-slot:cell-date="{ row: customer }">
          {{ customer.date }}
        </template>
        <template v-slot:cell-actions="{ row: customer }">
          <a
              class="btn btn-sm btn-light btn-active-light-primary"
              data-kt-menu-flip="top-end"
              data-kt-menu-placement="bottom-end"
              data-kt-menu-trigger="click"
              href="#"
          >Actions
            <span class="svg-icon svg-icon-5 m-0">
              <inline-svg src="/media/icons/duotune/arrows/arr072.svg"/>
            </span>
          </a>
          <!--begin::Menu-->
          <div
              class="
              menu
              menu-sub
              menu-sub-dropdown
              menu-column
              menu-rounded
              menu-gray-600
              menu-state-bg-light-primary
              fw-bold
              fs-7
              w-125px
              py-4
            "
              data-kt-menu="true"
          >
            <!--begin::Menu item-->
            <div class="menu-item px-3">
              <router-link
                  class="menu-link px-3"
                  to="/apps/customers/customer-details"
              >View
              </router-link
              >
            </div>
            <!--end::Menu item-->
            <!--begin::Menu item-->
            <div class="menu-item px-3">
              <a class="menu-link px-3" @click="deleteCustomer(customer.id)"
              >Delete</a
              >
            </div>
            <!--end::Menu item-->
          </div>
          <!--end::Menu-->
        </template>
      </Datatable>
    </div>
  </div>

  <ExportCustomerModal></ExportCustomerModal>
  <AddCustomerModal></AddCustomerModal>
</template>

<script lang="ts">
import {defineComponent, ref, onMounted} from "vue";
import Datatable from "@/components/kt-datatable/KTDatatable.vue";
import ExportCustomerModal from "@/components/modals/forms/ExportCustomerModal.vue";
import AddCustomerModal from "@/components/modals/forms/AddCustomerModal.vue";
import {MenuComponent} from "@/assets/ts/components";
import {setCurrentPageBreadcrumbs} from "@/core/helpers/breadcrumb";
import customers from "@/core/data/customers";
import {ICustomer} from "@/core/data/customers";
import {array} from "yup";
import ApiService from "@/core/services/ApiService";

export default defineComponent({
  name: "customers-listing",
  components: {
    Datatable,
    ExportCustomerModal,
    AddCustomerModal,
  },
  data() {
    return {
      checkedCustomers: ref([]),
      tableData: ref<Array<string>>([]),
      tableHeader: ref([
        {
          key: "checkbox",
        },
        {
          name: "Customer Name",
          key: "name",
          sortable: true,
        },
        {
          name: "Email",
          key: "email",
          sortable: true,
        },
        {
          name: "Company",
          key: "company",
          sortable: true,
        },
        {
          name: "Payment Method",
          key: "paymentMethod",
          sortingField: "payment.label",
          sortable: true,
        },
        {
          name: "Created Date",
          key: "date",
          sortable: true,
        },
        {
          name: "Actions",
          key: "actions",
        },
      ]),
      items: [],
      initCustomers: ref([]),
      search: ref<string>(""),
    };
  },
  beforeCreate() {
    let res = ApiService.get("admin/orders").then((data) => {
      this.tableData.values = data.data.data.data;

      // this.payments = data.data.payments
      // this.services = data.data.services
      // this.status = data.data.status
      //
      // this.lockedStatus = data.data.lockedStatus
      // this.canChange = data.data.canChange
      //
      // this.types = data.data.types
      // this.countries = data.data.country
      // this.counties = data.data.county
      // this.areas = data.data.areas
    });
    // this.initCustomers.values.splice(0, tableData.value.length, ...tableData.value);
    // this.tableData.value.push(customers[0])
    // items = ref<Array<ICustomer>>(customers) ;
  },
  methods: {
    searchItems() {
      //this.tableData.value.splice(0, tableData.value.length, ...initCustomers.value);
      // if (this.search.value !== "") {
      //   let results = ref([]);
      //   for (let j = 0; j < tableData.value.length; j++) {
      //     if (searchingFunc(tableData.value[j], search.value)) {
      //       results.push(tableData.value[j]);
      //     }
      //   }
      //   tableData.value.splice(0, tableData.value.length, ...results);
      // }
    },
  },
});
</script>